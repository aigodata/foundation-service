{
    // 数据源
    "datasources": {
        "website": {
            // URL
            "url": "jdbc:mysql://222.169.219.186:30032/foundation?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull",
            // 用户名
            "username": "root",
            // 密码
            "password": "aigo@2019",
            // 初始连接数
            "initialSize": 1,
            // 最小连接池数量
            "minIdle": 1,
            // 最大连接池数量
            "maxActive": 20,
            // 获取连接时最大等待时间, 单位毫秒
            "maxWait": 60000,
            // 配置间隔多久才进行一次检测, 检测需要关闭的空闲连接, 单位是毫秒
            "timeBetweenEvictionRunsMillis": 60000,
            // 配置一个连接在池中最小生存的时间, 单位是毫秒
            "minEvictableIdleTimeMillis": 300000,
            // 用来检测连接是否有效的SQL, 要求是一个查询语句, 常用select 'x'. 如果validationQuery为null, testOnBorrow, testOnReturn, testWhileIdle都不会起作用.
            "validationQuery": "SELECT 'x'",
            // 建议配置为true, 不影响性能, 并且保证安全性. 申请连接的时候检测, 如果空闲时间大于timeBetweenEvictionRunsMillis, 执行validationQuery检测连接是否有效.
            "testWhileIdle": true,
            // 申请连接时执行validationQuery检测连接是否有效, 做了这个配置会降低性能.
            "testOnBorrow": false,
            // 归还连接时执行validationQuery检测连接是否有效, 做了这个配置会降低性能.
            "testOnReturn": false,
            // 是否缓存preparedStatement, 也就是PSCache. PSCache对支持游标的数据库性能提升巨大, 比如说Oracle. 在MySQL下建议关闭.
            "poolPreparedStatements": false,
            // 配置扩展插件, 监控统计用的 stat, 防止 SQL 注入的 wall
            "filters": "stat,wall"
        }
    },
    // 打印SQL
    "log": true,
    "upsert": false
}
